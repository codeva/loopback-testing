{
  "name": "loopback-testing",
  "version": "1.2.0",
  "description": "Utilities for testing LoopBack applications",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/strongloop/loopback-testing"
  },
  "author": {
    "name": "Ritchie Martori"
  },
  "dependencies": {
    "async": "~0.9.0",
    "chai": "^1.9.2",
    "supertest": "~0.13.0"
  },
  "devDependencies": {
    "loopback": "^2.2.0",
    "mocha": "~1.21.4"
  },
  "license": "MIT",
  "readme": "#loopback-testing\n\n**Utilities for testing LoopBack apps**\n\n## overview\n\nThe following helpers are designed to generate [mocha] tests against\n[LoopBack](http://strongloop.com/loopback) apps.\n\n## install\n\n1. `npm install loopback-testing --save-dev`\n2. Assuming you started with a clean template/project generated by `slc loopback`\n  1. If you have mocha installed as a global npm module that's great! Simply update `<your_project>/package.json` with:\n\n    ```\n    {\n      ...\n      \"scripts\": {\n        ...\n        \"test\": \"mocha\"\n      }\n    }\n    ```\n  2. Otherwise, you can utilize the mocha library within the `loopback-testing` testing module:\n\n    ```\n    {\n      ...\n      \"scripts\": {\n        ...\n        \"test\": \"./node_modules/loopback-testing/node_modules/.bin/mocha\"\n      }\n    }\n    ```\n3. Run `npm test` to execute any tests under the `test` directory.\n\n## basic usage\n\nBelow is a simple LoopBack app.\n\n```js\nvar loopback = require('loopback');\nvar app = loopback();\nvar Product = app.model('product');\nProduct.attachTo(loopback.memory());\n```\n\nUse the `loopback-testing` module to generate `mocha` tests.\n\n```js\nvar lt = require('loopback-testing');\nvar assert = require('assert');\nvar app = require('../server/server.js'); //path to app.js or server.js\n\ndescribe('/products', function() {\n  lt.beforeEach.withApp(app);\n  lt.describe.whenCalledRemotely('GET', '/products', function() {\n    lt.it.shouldBeAllowed();\n    it('should have statusCode 200', function() {\n      assert.equal(this.res.statusCode, 200);\n    });\n\n    lt.beforeEach.givenModel('product');\n    it('should respond with an array of products', function() {\n      assert(Array.isArray(this.res.body));\n    });\n  });\n});\n```\n\n## building test data\n\nUse TestDataBuilder to build many Model instances in one async call. Specify\nonly properties relevant to your test, the builder will pre-fill remaining\nrequired properties with sensible defaults.\n\n```js\nvar TestDataBuilder = require('loopback-testing').TestDataBuilder;\nvar ref = TestDataBuilder.ref;\n\n// The context object to hold the created models.\n// You can use `this` in mocha test instead.\nvar context = {};\n\nvar ref = TestDataBuilder.ref;\nnew TestDataBuilder()\n  .define('application', Application, {\n    pushSettings: { stub: { } }\n  })\n  .define('device', Device, {\n     // use the value of application's id\n     // the value is resolved at build time\n     appId: ref('application.id'),\n     deviceType: 'android'\n  })\n  .define('notification', Notification)\n  .buildTo(context, function(err) {\n    // test models are available as\n    //   context.application\n    //   context.device\n    //   context.notification\n  });\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/strongloop/loopback-testing/issues"
  },
  "homepage": "https://github.com/strongloop/loopback-testing",
  "_id": "loopback-testing@1.2.0",
  "_shasum": "c4adaf8e690802c0056e342cfeb76d291856cdbe",
  "_resolved": "git+https://github.com/codeva/loopback-testing.git#681c2fc98ce612fd452a5e747ca577cb060d256d",
  "_from": "loopback-testing@git+https://github.com/codeva/loopback-testing.git"
}
